{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hanna Ximena\\\\Cursos\\\\react\\\\badge-tres\\\\proyecto\\\\src\\\\components\\\\BadgesBox.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import Badges from '../pages/Badges';\n\nclass BadgesBox extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.badge.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nfunction useSearchBadges(badges) {\n  _s();\n\n  const [query, setQuery] = React.useState('');\n  const [filterBadges, setFilterBadges] = React.useState(badges);\n  React.useMemo(() => {\n    const result = badges.filter(badge => {\n      return `${badge.name}`.toLowerCase().includes(query.toLowerCase());\n    });\n    setFilterBadges(result);\n  }, [badges, query]);\n  return {\n    query,\n    setQuery,\n    filterBadges\n  };\n}\n\n_s(useSearchBadges, \"XtfylFZycXmyEgN553AwAaw7fIs=\");\n\nfunction BadgesListBox(props) {\n  _s2();\n\n  const badges = props.badges;\n  const {\n    query,\n    setQuery,\n    filterBadges\n  } = useSearchBadges(badges);\n\n  if (filterBadges.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Filter Badges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: query,\n          onChange: e => {\n            setQuery(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No badges were found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary\",\n        to: \"/badges/new\",\n        children: \"Create new badge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-unstyled\",\n    children: filterBadges.map(badge => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-reset text-decoration-none\",\n          to: `/badges/${badge.id}`,\n          children: /*#__PURE__*/_jsxDEV(BadgesBox, {\n            badge: badge\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this)\n      }, badge.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 11\n  }, this);\n}\n\n_s2(BadgesListBox, \"OOzWaw0yqDweLFSb6fTWvPO6A90=\", false, function () {\n  return [useSearchBadges];\n});\n\n_c = BadgesListBox;\nexport default BadgesListBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"BadgesListBox\");","map":{"version":3,"sources":["C:/Users/Hanna Ximena/Cursos/react/badge-tres/proyecto/src/components/BadgesBox.js"],"names":["React","Link","BadgesBox","Component","render","props","badge","name","useSearchBadges","badges","query","setQuery","useState","filterBadges","setFilterBadges","useMemo","result","filter","toLowerCase","includes","BadgesListBox","length","e","target","value","map","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACpCC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKC,KAAL,CAAWC,KAAX,CAAiBC;AADtB;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAPmC;;AAQvC;;AAED,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAAA;;AAC7B,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCd,KAAK,CAACY,QAAN,CAAeH,MAAf,CAA1C;AAEAT,EAAAA,KAAK,CAACe,OAAN,CAAc,MAAM;AACpB,UAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAP,CAAcX,KAAK,IAAI;AACrC,aAAQ,GAAEA,KAAK,CAACC,IAAK,EAAd,CACNW,WADM,GAENC,QAFM,CAEGT,KAAK,CAACQ,WAAN,EAFH,CAAP;AAGE,KAJY,CAAf;AAMEJ,IAAAA,eAAe,CAACE,MAAD,CAAf;AACD,GARD,EAQG,CAAEP,MAAF,EAAUC,KAAV,CARH;AAUA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBE,IAAAA;AAAnB,GAAP;AACD;;GAfML,e;;AAiBP,SAASY,aAAT,CAAwBf,KAAxB,EAA+B;AAAA;;AAC7B,QAAMI,MAAM,GAAGJ,KAAK,CAACI,MAArB;AAEA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBE,IAAAA;AAAnB,MAAoCL,eAAe,CAACC,MAAD,CAAzD;;AAEE,MAAII,YAAY,CAACQ,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,wBACE;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,SAAS,EAAC,cAFV;AAGA,UAAA,KAAK,EAAEX,KAHP;AAIA,UAAA,QAAQ,EAAGY,CAAD,IAAO;AACfX,YAAAA,QAAQ,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACA;AANF;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAkC,QAAA,EAAE,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAED,sBAEI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,cACGX,YAAY,CAACY,GAAb,CAAiBnB,KAAK,IAAI;AACzB,0BACE;AAAA,+BACE,QAAC,IAAD;AACA,UAAA,SAAS,EAAC,iCADV;AAEA,UAAA,EAAE,EAAG,WAAUA,KAAK,CAACoB,EAAG,EAFxB;AAAA,iCAIA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEpB;AAAlB;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADF,SAASA,KAAK,CAACoB,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAXA;AADH;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH;;IA9CQN,a;UAGmCZ,e;;;KAHnCY,a;AAgDX,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n// import Badges from '../pages/Badges';\r\n\r\nclass BadgesBox extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.badge.name}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nfunction useSearchBadges(badges) {\r\n    const [ query, setQuery ] = React.useState('');\r\n    const [ filterBadges, setFilterBadges ] = React.useState(badges);\r\n    \r\n    React.useMemo(() => {\r\n    const result = badges.filter(badge => {\r\n     return `${badge.name}`\r\n     .toLowerCase()\r\n     .includes(query.toLowerCase());\r\n      });\r\n  \r\n      setFilterBadges(result);\r\n    }, [ badges, query ]);\r\n  \r\n    return { query, setQuery, filterBadges };\r\n  }\r\n  \r\n  function BadgesListBox (props) {\r\n    const badges = props.badges;\r\n\r\n    const { query, setQuery, filterBadges } = useSearchBadges(badges)\r\n  \r\n      if (filterBadges.length === 0) {\r\n        return (\r\n          <div>\r\n  \r\n            <div className=\"form-group\">  \r\n            <label>Filter Badges</label>\r\n            <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={query}\r\n            onChange={(e) => {\r\n              setQuery(e.target.value)\r\n             }}\r\n            />\r\n          </div>\r\n  \r\n            <h3>No badges were found</h3>\r\n            <Link className=\"btn btn-primary\" to=\"/badges/new\">\r\n              Create new badge\r\n            </Link>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return (\r\n  \r\n          <ul className=\"list-unstyled\">\r\n            {filterBadges.map(badge => {\r\n              return (\r\n                <li key={badge.id}>\r\n                  <Link\r\n                  className=\"text-reset text-decoration-none\"\r\n                  to={`/badges/${badge.id}`}\r\n                  >\r\n                  <BadgesBox badge={badge}/>\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n      );\r\n  }\r\n\r\nexport default BadgesListBox;"]},"metadata":{},"sourceType":"module"}